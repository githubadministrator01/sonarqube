name: Deploy Sonarqube with helm

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Run in dry_run mode e.g --dry-run"
        required: true
        type: boolean
        default: false

env:
  REPO: ${{ vars.REPO }}
  NAMESPACE: ${{ vars.NAMESPACE }}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.27.0"

      - name: Set up helm
        uses: azure/setup-helm@v3
        with:
          version: "v3.11.0"

      # Action to configure AWS creds
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-region: eu-central-1
      #     aws-access-key-id: ${{ secrets.aws-access-key-id }}
      #     aws-secret-access-key: ${{ secrets.aws-secret-access-key }}

      # - name: Get caller identity
      #   run: |
      #     aws sts get-caller-identity

      - name: Create `.kube` directory
        run: mkdir -p ~/.kube/

      - name: Create kubectl config
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > ~/.kube/kubeconfig-sonar-dev
          ls -lrt ~/.kube/kubeconfig-sonar-dev
          cat ~/.kube/kubeconfig-sonar-dev
          chown $(id -u):$(id -g) ~/.kube/kubeconfig-sonar-dev
          kubectl config use-context docker-desktop
          kubectl config current-context

      - name: Validate kubectl and helm installation
        run: |
          helm version
          kubectl version
          kubectl config view

  deploy:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Add Sonar repo
        run: |
          helm repo add sonarqube ${{ env.REPO }}
          helm repo update

      - name: Run in dry-run mode
        if: ${{ inputs.dry_run }}
        run: |
          echo "Run the sonarqube helm chart in dry_run mode" 
          helm upgrade -i -n${{ env.NAMESPACE }} sonarqube-dce -f sonar-values.yaml sonarqube-dce/ --dry-run

      - name: Deploy sonarqube
        if: ${{ inputs.dry_run == false }}
        run: |
          echo "Deploy sonarqube helm chart"
          helm upgrade -i -n${{ env.NAMESPACE }} sonarqube-dce -f sonar-values.yaml sonarqube-dce/

  verify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Show deployment details
        run: kubectl get all -n${{ env.NAMESPACE }}
